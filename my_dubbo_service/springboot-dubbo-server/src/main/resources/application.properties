server.port=11001
## Dubbo 服务提供者配置
spring.dubbo.application.name=provider
spring.dubbo.registry.address=zookeeper://192.168.1.120:2181?backup=192.168.1.121:2181,192.168.1.122:2181
spring.dubbo.protocol.name=dubbo
spring.dubbo.protocol.port=20880
spring.dubbo.scan=org.spring.springboot.api

# new Dubbo
spring.application.name = dubbo-provider-demo
management.port = 11002
dubbo.scan.basePackages  = org.spring.springboot.api
dubbo.application.id = dubbo-provider-demo
dubbo.application.name =provider
dubbo.protocol.id = dubbo
dubbo.protocol.name = dubbo
dubbo.protocol.port = 20880
dubbo.registry.id = my-registry
dubbo.registry.address = zookeeper://192.168.1.120:2181?backup=192.168.1.121:2181,192.168.1.122:2181


## 数据源配置
spring.datasource.url=jdbc:mysql://192.168.1.120:3306/SECOND_KILL?useUnicode=true&characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=a
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

## Mybatis 配置
mybatis.typeAliasesPackage=org.spring.springboot.domain
mybatis.mapperLocations=classpath:mapping/*.xml

spring.redis.host=192.168.1.120
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=30000

#kafka
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=192.168.1.120:9092,192.168.1.121:9092,192.168.1.122:9092
# 指定listener 容器中的线程数，用于提高并发量
spring.kafka.listener.concurrency=3
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=1000
# 指定默认消费者group id
spring.kafka.consumer.group-id=myGroup
# 指定默认topic id
spring.kafka.template.default-topic=ORDER-TOPIC1


#log
logging.level.root=INFO
logging.pattern.console="%c-%m-%p-%n"
log4j.appender.stdout.layout.ConversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.A1=org.apache.log4j.DailyRollingFileAppender
log4j.appender.A1.File=mylog.log
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
#%时间  [%线程] %log级别 %完整类名 - %消息 %换行
log4j.appender.A1.layout.ConversionPattern=%d [%t] %-5p %c - %m%n