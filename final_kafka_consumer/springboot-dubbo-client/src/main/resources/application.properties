## 避免和 server 工程端口冲突
server.port=11007

## Dubbo 服务消费者配置
spring.dubbo.application.name=consumer
spring.dubbo.registry.address=zookeeper://192.168.1.120:2181?backup=192.168.1.121:2181,192.168.1.122:2181
spring.dubbo.scan=org.spring.springboot.controller

# new Dubbo
spring.application.name = dubbo-consumer-demo
management.port = 11009
dubbo.scan.basePackages  = org.spring.springboot.api
dubbo.application.id = dubbo-consumer-demo
dubbo.application.name =consumer
dubbo.protocol.id = dubboconsumer
dubbo.protocol.name = dubbo
dubbo.protocol.port = 20880
dubbo.registry.id = my-registryconsumer
dubbo.registry.address = zookeeper://192.168.1.120:2181?backup=192.168.1.121:2181,192.168.1.122:2181

#log
logging.level.root=INFO
logging.pattern.console="%c-%m-%p-%n"
log4j.appender.stdout.layout.ConversionPattern=%d [%t] %-5p %c - %m%n
log4j.appender.A1=org.apache.log4j.DailyRollingFileAppender
log4j.appender.A1.File=mylog.txt
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
#%时间  [%线程] %log级别 %完整类名 - %消息 %换行
log4j.appender.A1.layout.ConversionPattern=%d [%t] %-5p %c - %m%n

#kafka
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=192.168.1.120:9092,192.168.1.121:9092,192.168.1.122:9092
# 指定listener 容器中的线程数，用于提高并发量
spring.kafka.listener.concurrency=3
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=1000
# 指定默认消费者group id
spring.kafka.consumer.group-id=myGroup
# 指定默认topic id
spring.kafka.template.default-topic=ORDER-TOPIC1